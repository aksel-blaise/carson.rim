[["index.html", "Ceramic rim morphology differs significantly between contexts at the Carson site Preface 0.1 Basis of inquiry 0.2 Primary findings 0.3 Data management 0.4 Colophon", " Ceramic rim morphology differs significantly between contexts at the Carson site Robert Z. Selden, Jr. 2021-05-25 Preface Reproducibilitythe ability to recompute resultsand replicabilitythe chances other experimenters will achieve a consistent resultare two foundational characteristics of successful scientific research (Leek and Peng 2015). This volume is written using Markdown, and includes all analysis code employed in the study, providing a means for others to reproduce (exactly) those results discussed and expounded upon in the following chapters. The replicable nature of this undertaking provides a means for others to critically assess and evaluate the various analytical components of this study (Gray and Marwick 2019; Peng 2011; Gandrud 2014), which is a necessary requirement for the production of reliable knowledge. 0.1 Basis of inquiry Using the figures and tables provided in a recent article published in Southeastern Archaeology, rim images and tabular data were repurposed for a study of traditional and geometric morphometrics to assess whether ceramic rim shape differs between two contexts at the Carson site. 0.2 Primary findings 0.2.1 Traditional morphometrics No variables differ significantly between contexts 0.2.2 Geometric morphometrics Rim shape differs significantly by context 0.3 Data management The data and analysis code associated with this project can be accessed through this document or the GitHub repository https://github.com/aksel-blaise/carson.rim, which is digitally curated on the Open Science Framework DOI: 10.17605/OSF.IO/AE9ZM. 0.4 Colophon This version of the analysis was generated on 2021-05-25 11:53:41 using the following computational environment and dependencies: # what R packages and versions were used? if (&quot;devtools&quot; %in% installed.packages()) devtools::session_info() ## - Session info ----------------------------------------------------------------------------------------------------------- ## setting value ## version R version 4.0.5 (2021-03-31) ## os Windows 10 x64 ## system x86_64, mingw32 ## ui RStudio ## language (EN) ## collate English_United States.1252 ## ctype English_United States.1252 ## tz America/Chicago ## date 2021-05-25 ## ## - Packages --------------------------------------------------------------------------------------------------------------- ## package * version date lib source ## abind 1.4-5 2016-07-21 [1] CRAN (R 4.0.0) ## ape 5.5 2021-04-25 [1] CRAN (R 4.0.5) ## assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.0.2) ## backports 1.2.1 2020-12-09 [1] CRAN (R 4.0.3) ## bezier 1.1.2 2018-12-14 [1] CRAN (R 4.0.3) ## bookdown 0.22 2021-04-22 [1] CRAN (R 4.0.5) ## brew 1.0-6 2011-04-13 [1] CRAN (R 4.0.0) ## broom 0.7.6 2021-04-05 [1] CRAN (R 4.0.4) ## bslib 0.2.5.1 2021-05-18 [1] CRAN (R 4.0.5) ## cachem 1.0.5 2021-05-15 [1] CRAN (R 4.0.5) ## callr 3.7.0 2021-04-20 [1] CRAN (R 4.0.4) ## car 3.0-10 2020-09-29 [1] CRAN (R 4.0.3) ## carData 3.0-4 2020-05-22 [1] CRAN (R 4.0.0) ## cellranger 1.1.0 2016-07-27 [1] CRAN (R 4.0.2) ## cli 2.5.0 2021-04-26 [1] CRAN (R 4.0.5) ## cluster * 2.1.1 2021-02-14 [2] CRAN (R 4.0.5) ## colorspace 2.0-1 2021-05-04 [1] CRAN (R 4.0.5) ## cowplot 1.1.1 2020-12-30 [1] CRAN (R 4.0.3) ## crayon 1.4.1 2021-02-08 [1] CRAN (R 4.0.3) ## crosstalk 1.1.1 2021-01-12 [1] CRAN (R 4.0.3) ## curl 4.3.1 2021-04-30 [1] CRAN (R 4.0.5) ## data.table 1.14.0 2021-02-21 [1] CRAN (R 4.0.4) ## DBI 1.1.1 2021-01-15 [1] CRAN (R 4.0.3) ## dbplyr 2.1.1 2021-04-06 [1] CRAN (R 4.0.4) ## desc 1.3.0 2021-03-05 [1] CRAN (R 4.0.4) ## devtools 2.4.1 2021-05-05 [1] CRAN (R 4.0.5) ## digest 0.6.27 2020-10-24 [1] CRAN (R 4.0.3) ## dplyr * 1.0.6 2021-05-05 [1] CRAN (R 4.0.5) ## ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.0.5) ## evaluate 0.14 2019-05-28 [1] CRAN (R 4.0.2) ## fansi 0.5.0 2021-05-25 [1] CRAN (R 4.0.5) ## farver 2.1.0 2021-02-28 [1] CRAN (R 4.0.4) ## fastmap 1.1.0 2021-01-25 [1] CRAN (R 4.0.3) ## forcats * 0.5.1 2021-01-27 [1] CRAN (R 4.0.3) ## foreign 0.8-81 2020-12-22 [2] CRAN (R 4.0.5) ## fs 1.5.0 2020-07-31 [1] CRAN (R 4.0.2) ## generics 0.1.0 2020-10-31 [1] CRAN (R 4.0.3) ## geomorph * 4.0.0 2021-05-25 [1] Github (geomorphR/geomorph@c7a1525) ## ggExtra * 0.9 2019-08-27 [1] CRAN (R 4.0.2) ## ggfortify * 0.4.11 2020-10-02 [1] CRAN (R 4.0.3) ## ggplot2 * 3.3.3 2020-12-30 [1] CRAN (R 4.0.3) ## ggpubr * 0.4.0 2020-06-27 [1] CRAN (R 4.0.2) ## ggsignif 0.6.1 2021-02-23 [1] CRAN (R 4.0.4) ## git2r 0.28.0 2021-01-10 [1] CRAN (R 4.0.3) ## glue 1.4.2 2020-08-27 [1] CRAN (R 4.0.2) ## gridExtra 2.3 2017-09-09 [1] CRAN (R 4.0.2) ## gtable 0.3.0 2019-03-25 [1] CRAN (R 4.0.2) ## haven 2.4.1 2021-04-23 [1] CRAN (R 4.0.5) ## here * 1.0.1 2020-12-13 [1] CRAN (R 4.0.3) ## highr 0.9 2021-04-16 [1] CRAN (R 4.0.4) ## hms 1.1.0 2021-05-17 [1] CRAN (R 4.0.5) ## htmltools 0.5.1.1 2021-01-22 [1] CRAN (R 4.0.3) ## htmlwidgets 1.5.3 2020-12-10 [1] CRAN (R 4.0.3) ## httpuv 1.6.1 2021-05-07 [1] CRAN (R 4.0.5) ## httr 1.4.2 2020-07-20 [1] CRAN (R 4.0.2) ## jpeg 0.1-8.1 2019-10-24 [1] CRAN (R 4.0.0) ## jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.0.5) ## jsonlite 1.7.2 2020-12-09 [1] CRAN (R 4.0.3) ## knitr 1.33 2021-04-24 [1] CRAN (R 4.0.5) ## labeling 0.4.2 2020-10-20 [1] CRAN (R 4.0.3) ## later 1.2.0 2021-04-23 [1] CRAN (R 4.0.5) ## lattice 0.20-41 2020-04-02 [2] CRAN (R 4.0.5) ## lifecycle 1.0.0 2021-02-15 [1] CRAN (R 4.0.4) ## lubridate 1.7.10 2021-02-26 [1] CRAN (R 4.0.4) ## magrittr 2.0.1 2020-11-17 [1] CRAN (R 4.0.3) ## manipulateWidget 0.10.1 2020-02-24 [1] CRAN (R 4.0.2) ## MASS 7.3-54 2021-05-03 [1] CRAN (R 4.0.5) ## Matrix * 1.3-3 2021-05-04 [1] CRAN (R 4.0.5) ## memoise 2.0.0 2021-01-26 [1] CRAN (R 4.0.3) ## mime 0.10 2021-02-13 [1] CRAN (R 4.0.4) ## miniUI 0.1.1.1 2018-05-18 [1] CRAN (R 4.0.2) ## modelr 0.1.8 2020-05-19 [1] CRAN (R 4.0.2) ## munsell 0.5.0 2018-06-12 [1] CRAN (R 4.0.2) ## nlme 3.1-152 2021-02-04 [2] CRAN (R 4.0.5) ## openxlsx 4.2.3 2020-10-27 [1] CRAN (R 4.0.3) ## pillar 1.6.1 2021-05-16 [1] CRAN (R 4.0.5) ## pkgbuild 1.2.0 2020-12-15 [1] CRAN (R 4.0.3) ## pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.0.2) ## pkgload 1.2.1 2021-04-06 [1] CRAN (R 4.0.5) ## png 0.1-7 2013-12-03 [1] CRAN (R 4.0.0) ## prettyunits 1.1.1 2020-01-24 [1] CRAN (R 4.0.2) ## processx 3.5.2 2021-04-30 [1] CRAN (R 4.0.5) ## promises 1.2.0.1 2021-02-11 [1] CRAN (R 4.0.3) ## ps 1.6.0 2021-02-28 [1] CRAN (R 4.0.4) ## purrr * 0.3.4 2020-04-17 [1] CRAN (R 4.0.2) ## R6 2.5.0 2020-10-28 [1] CRAN (R 4.0.3) ## Rcpp 1.0.6 2021-01-15 [1] CRAN (R 4.0.3) ## readr * 1.4.0 2020-10-05 [1] CRAN (R 4.0.3) ## readxl 1.3.1 2019-03-13 [1] CRAN (R 4.0.2) ## remotes 2.3.0 2021-04-01 [1] CRAN (R 4.0.5) ## reprex 2.0.0 2021-04-02 [1] CRAN (R 4.0.5) ## rgl * 0.106.8 2021-04-23 [1] CRAN (R 4.0.5) ## rio 0.5.26 2021-03-01 [1] CRAN (R 4.0.4) ## rjson 0.2.20 2018-06-08 [1] CRAN (R 4.0.0) ## rlang 0.4.11 2021-04-30 [1] CRAN (R 4.0.5) ## rmarkdown 2.8 2021-05-07 [1] CRAN (R 4.0.5) ## Rook 1.1-1 2014-10-20 [1] CRAN (R 4.0.3) ## rprojroot 2.0.2 2020-11-15 [1] CRAN (R 4.0.3) ## RRPP * 1.0.0 2021-03-30 [1] CRAN (R 4.0.5) ## rstatix 0.7.0 2021-02-13 [1] CRAN (R 4.0.4) ## rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.0.3) ## rvest 1.0.0 2021-03-09 [1] CRAN (R 4.0.4) ## sass 0.4.0 2021-05-12 [1] CRAN (R 4.0.5) ## scales 1.1.1 2020-05-11 [1] CRAN (R 4.0.2) ## sessioninfo 1.1.1 2018-11-05 [1] CRAN (R 4.0.2) ## shiny 1.6.0 2021-01-25 [1] CRAN (R 4.0.3) ## StereoMorph * 1.6.3 2019-11-30 [1] CRAN (R 4.0.3) ## stringi 1.6.2 2021-05-17 [1] CRAN (R 4.0.5) ## stringr * 1.4.0 2019-02-10 [1] CRAN (R 4.0.2) ## svgViewR 1.4.1 2020-10-03 [1] CRAN (R 4.0.3) ## testthat 3.0.2 2021-02-14 [1] CRAN (R 4.0.4) ## tibble * 3.1.2 2021-05-16 [1] CRAN (R 4.0.5) ## tidyr * 1.1.3 2021-03-03 [1] CRAN (R 4.0.4) ## tidyselect 1.1.1 2021-04-30 [1] CRAN (R 4.0.5) ## tidyverse * 1.3.1 2021-04-15 [1] CRAN (R 4.0.4) ## tiff 0.1-8 2021-03-31 [1] CRAN (R 4.0.4) ## usethis 2.0.1 2021-02-10 [1] CRAN (R 4.0.3) ## utf8 1.2.1 2021-03-12 [1] CRAN (R 4.0.4) ## vctrs 0.3.8 2021-04-29 [1] CRAN (R 4.0.5) ## webshot 0.5.2 2019-11-22 [1] CRAN (R 4.0.2) ## wesanderson * 0.3.6 2018-04-20 [1] CRAN (R 4.0.2) ## withr 2.4.2 2021-04-18 [1] CRAN (R 4.0.4) ## xfun 0.23 2021-05-15 [1] CRAN (R 4.0.5) ## xml2 1.3.2 2020-04-23 [1] CRAN (R 4.0.2) ## xtable 1.8-4 2019-04-21 [1] CRAN (R 4.0.2) ## yaml 2.2.1 2020-02-01 [1] CRAN (R 4.0.0) ## zip 2.1.1 2020-08-27 [1] CRAN (R 4.0.2) ## ## [1] C:/Users/seldenjrz/Documents/R/win-library/4.0 ## [2] C:/Program Files/R/R-4.0.5/library Current Git commit details are: # where can I find this commit? if (&quot;git2r&quot; %in% installed.packages() &amp; git2r::in_repository(path = &quot;.&quot;)) git2r::repository(here::here()) ## Local: main D:/github/carson.rim ## Remote: main @ origin (https://github.com/aksel-blaise/carson.rim) ## Head: [389e0f6] 2021-05-25: &lt;init carson.rim&gt; References "],["linear-morphometrics.html", "Chapter 1 Linear morphometrics 1.1 Read data and define variables 1.2 Boxplots for variable by context 1.3 Principal Components Analysis 1.4 Analyses of Variance (ANOVA) for variable ~ context", " Chapter 1 Linear morphometrics # install required analysis packages #devtools::install_github(&quot;tidyverse/tidyverse&quot;) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;kassambara/ggpubr&quot;) #devtools::install_github(&quot;sinhrks/ggfortify&quot;) #devtools::install_github(&quot;daattali/ggExtra&quot;) # load libraries library(here) library(tidyverse) library(RRPP) library(ggpubr) library(ggfortify) library(cluster) library(wesanderson) library(ggExtra) 1.1 Read data and define variables # read data data &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, as.is=TRUE) # define variables context &lt;- data$context surf.treat &lt;- data$surf.treat weight &lt;- data$weight lip.len &lt;- data$lip.length wall.th &lt;- data$wall.thick lip.th &lt;- data$lip.thick 1.2 Boxplots for variable by context # boxplot of weight ~ context contextweight &lt;- ggplot(data, aes(x = context, y = weight, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Weight&#39;) # boxplot of lip length ~ context contextliplen &lt;- ggplot(data, aes(x = context, y = lip.len, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Lip Length&#39;) # boxplot of wall thickness ~ context contextwallth &lt;- ggplot(data, aes(x = context, y = wall.th, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Wall Thickness&#39;) # boxplot of lip thickness ~ context contextlipth &lt;- ggplot(data, aes(x = context, y = lip.th, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Lip Thickness&#39;) # render figure contextfigure &lt;- ggarrange(contextweight, contextliplen, contextwallth, contextlipth, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;), ncol = 2, nrow = 2) ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. # plot figure contextfigure Figure 1.1: Boxplots for weight, lip length, wall thickness, and lip thickness for ceramic rims. 1.3 Principal Components Analysis #attributes for plot df&lt;-data[c(7:9)] pch.gps.gp &lt;- c(15,16)[as.factor(context)] col.gps.gp &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(context)] #pca pca &lt;- autoplot(prcomp(df), data = data, asp = 1, shape = pch.gps.gp, colour = &quot;context&quot;, variance_percentage = TRUE, loadings = TRUE, loadings.colour = &#39;blue&#39;, loadings.label = TRUE, loadings.label.size = 3, frame = TRUE, frame.type = &#39;t&#39;) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) ggMarginal(pca, groupColour = TRUE) Figure 1.2: Principal components analysis by context. 1.4 Analyses of Variance (ANOVA) for variable ~ context 1.4.1 Lip length ~ context # anova = lip length ~ context contextll &lt;- lm.rrpp(lip.len ~ context, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(contextll) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 1.211 1.2107 0.00776 0.219 -0.34935 0.6351 ## Residuals 28 154.777 5.5277 0.99224 ## Total 29 155.987 ## ## Call: lm.rrpp(f1 = lip.len ~ context, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) 1.4.2 Wall thickness of context # anova = wall thickness ~ context contextwth &lt;- lm.rrpp(wall.th ~ context, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(contextwth) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.575 0.57457 0.00865 0.2443 -0.30361 0.6198 ## Residuals 28 65.863 2.35223 0.99135 ## Total 29 66.437 ## ## Call: lm.rrpp(f1 = wall.th ~ context, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) 1.4.3 Lip thickness ~ context # anova = lip thickness ~ context contextlth &lt;- lm.rrpp(lip.th ~ context, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(contextlth) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.39 0.3903 0.00204 0.0573 -0.93303 0.8098 ## Residuals 28 190.64 6.8086 0.99796 ## Total 29 191.03 ## ## Call: lm.rrpp(f1 = lip.th ~ context, iter = 9999, SS.type = &quot;I&quot;, data = data, print.progress = FALSE) "],["geometric-morphometrics-1.html", "Chapter 2 Geometric morphometrics 2.1 Load packages + data 2.2 Generalised Procrustes Analysis 2.3 Boxplot (centroid size) 2.4 Principal Components Analysis 2.5 Procrustes ANOVA: Shape and size 2.6 Allometry 2.7 Mean shapes", " Chapter 2 Geometric morphometrics 2.1 Load packages + data # download most recent software version #devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) # load analysis packages library(here) library(StereoMorph) library(geomorph) library(ggplot2) library(dplyr) library(wesanderson) # read shape data and define number of sLMs shapes &lt;- readShapes(&quot;shapes&quot;) shapesGM &lt;- readland.shapes(shapes, nCurvePts = c(20)) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) 2.2 Generalised Procrustes Analysis # gpa Y.gpa &lt;- gpagen(shapesGM, print.progress = FALSE) plot(Y.gpa) 2.3 Boxplot (centroid size) # dataframe gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, cont = qdata$ context) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # attributes csz &lt;- qdata$csz context &lt;- qdata$context # palette pal = wes_palette(&quot;Moonrise2&quot;) # boxplot of Perdiz arrow points by context csz.temp &lt;- ggplot(qdata, aes(x = context, y = csz, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_color_manual(values = pal) + theme(legend.position = &quot;none&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x = &#39;Raw Material&#39;, y = &#39;Centroid Size&#39;) # render plot csz.temp ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. 2.4 Principal Components Analysis # pca pca &lt;- gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 30 ## Number of vectors 29 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 Comp5 Comp6 Comp7 Comp8 ## Eigenvalues 0.0371361 0.01634379 0.002105276 0.0006150787 0.0004071649 0.0002011171 0.0001378441 9.249565e-05 ## Proportion of Variance 0.6491699 0.28570315 0.036801982 0.0107520889 0.0071175814 0.0035156955 0.0024096305 1.616901e-03 ## Cumulative Proportion 0.6491699 0.93487306 0.971675045 0.9824271341 0.9895447155 0.9930604110 0.9954700415 9.970869e-01 ## Comp9 Comp10 Comp11 Comp12 Comp13 Comp14 Comp15 ## Eigenvalues 6.610968e-05 3.441467e-05 2.358206e-05 1.273002e-05 8.279266e-06 6.377831e-06 3.601826e-06 ## Proportion of Variance 1.155652e-03 6.015971e-04 4.122341e-04 2.225314e-04 1.447285e-04 1.114898e-04 6.296292e-05 ## Cumulative Proportion 9.982426e-01 9.988442e-01 9.992564e-01 9.994790e-01 9.996237e-01 9.997352e-01 9.997981e-01 ## Comp16 Comp17 Comp18 Comp19 Comp20 Comp21 Comp22 ## Eigenvalues 3.218518e-06 2.218869e-06 1.751957e-06 1.361077e-06 8.823034e-07 7.436413e-07 6.629143e-07 ## Proportion of Variance 5.626238e-05 3.878768e-05 3.062567e-05 2.379275e-05 1.542340e-05 1.299947e-05 1.158830e-05 ## Cumulative Proportion 9.998544e-01 9.998932e-01 9.999238e-01 9.999476e-01 9.999630e-01 9.999760e-01 9.999876e-01 ## Comp23 Comp24 Comp25 Comp26 Comp27 Comp28 Comp29 ## Eigenvalues 2.383783e-07 1.985124e-07 1.381615e-07 5.898989e-08 4.174008e-08 2.855408e-08 3.955376e-09 ## Proportion of Variance 4.167051e-06 3.470163e-06 2.415178e-06 1.031193e-06 7.296515e-07 4.991491e-07 6.914327e-08 ## Cumulative Proportion 9.999918e-01 9.999953e-01 9.999977e-01 9.999987e-01 9.999994e-01 9.999999e-01 1.000000e+00 # set plot parameters pch.gps &lt;- c(15,17)[as.factor(qdata$context)] col.gps &lt;- pal[as.factor(qdata$context)] col.hull &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # pca plot pc.plot &lt;- plot(pca, asp = 1, pch = pch.gps, col = col.gps) shapeHulls(pc.plot, groups = qdata$context, group.cols = col.hull) 2.4.1 Minima/maxima of PC1/2 # plot x/y maxima/minima # x - minima mean.shape &lt;- mshape(Y.gpa$coords) plotRefToTarget(pca$shapes$shapes.comp1$min, mean.shape) # x - maxima plotRefToTarget(pca$shapes$shapes.comp1$max, mean.shape) # y - minima plotRefToTarget(pca$shapes$shapes.comp2$min, mean.shape) # y - maxima plotRefToTarget(pca$shapes$shapes.comp2$max, mean.shape) 2.5 Procrustes ANOVA: Shape and size # shape fit.sh.reg &lt;- procD.lm(shape ~ context, data = gdf, print.progress = FALSE, iter = 9999) # shape anova(fit.sh.reg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.17877 0.178767 0.10776 3.3816 1.7342 0.0365 * ## Residuals 28 1.48019 0.052864 0.89224 ## Total 29 1.65896 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ context, iter = 9999, data = gdf, print.progress = FALSE) # size fit.sz.reg &lt;- procD.lm(size ~ context, data = gdf, print.progress = FALSE, iter = 9999) # size anova(fit.sz.reg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.0275 0.027532 0.00507 0.1426 -0.56399 0.7099 ## Residuals 28 5.4054 0.193049 0.99493 ## Total 29 5.4329 ## ## Call: procD.lm(f1 = size ~ context, iter = 9999, data = gdf, print.progress = FALSE) 2.6 Allometry # allometry (does shape change with size) fit.size &lt;- procD.lm(shape ~ size, data = gdf, print.progress = FALSE, iter = 9999) # allometry anova(fit.size) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.16431 0.16431 0.09905 3.0782 1.5966 0.0514 . ## Residuals 28 1.49465 0.05338 0.90095 ## Total 29 1.65896 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size, iter = 9999, data = gdf, print.progress = FALSE) 2.7 Mean shapes # subset landmark coordinates to produce mean shapes new.coords &lt;- coords.subset(A = Y.gpa$coords, group = qdata$context) names(new.coords) ## [1] &quot;Pit 434&quot; &quot;Structure 23&quot; # group shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes plot(mean$`Pit 434`) plot(mean$`Structure 23`) # comparison plots plotRefToTarget(mean$`Pit 434`, mean$`Structure 23`, method = &quot;points&quot;, mag = 1) "],["references.html", "References", " References "]]
