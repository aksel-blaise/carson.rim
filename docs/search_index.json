[["index.html", "Ceramic rim morphology differs significantly between contexts at the Carson site Preface 0.1 Basis of inquiry 0.2 Primary findings 0.3 Data management 0.4 Colophon", " Ceramic rim morphology differs significantly between contexts at the Carson site Robert Z. Selden, Jr. 2021-05-26 Preface Reproducibilitythe ability to recompute resultsand replicabilitythe chances other experimenters will achieve a consistent resultare two foundational characteristics of successful scientific research (Leek and Peng 2015). This volume is written using Markdown, and includes all analysis code employed in the study, providing a means for others to reproduce (exactly) those results discussed and expounded upon in the following chapters. The replicable nature of this undertaking provides a means for others to critically assess and evaluate the various analytical components of this study (Gray and Marwick 2019; Peng 2011; Gandrud 2014), which is a necessary requirement for the production of reliable knowledge. 0.1 Basis of inquiry In a June 18, 1937 Works Progress Administration interview with Lillian Cassaway, Sadie Bedokaa Caddo-Delaware woman who was raised with the Caddostated that: Each [Caddo] clan had its own shape to make its pottery. One clan never thought of making anything the same pattern of another clan. You could tell who made the pottery by the shape (Cassaway 1937, 395). 0.1.1 Caddo communities of practice General differences in Caddo ceramic forms have been noted elsewhere (Krieger 1946; Perttula 2015; Selden Jr., Perttula, and OBrien 2014); however, geometric morphometric methods provide a means of quantitatively assessing the morphological variation that occurs in Caddo ceramics. The study of the Clarence H. Webb collection was the first to illustrate a potentially significant north-south geographic shape difference among Hickory Engraved and Smithport Plain Caddo bottle types (Selden Jr. 2019). That preliminary observation was confirmed using more robust samples of Hickory Engraved and Smithport Plain bottles (Selden Jr. 2018a, 2018b), and later expanded to include a greater variety of Caddo bottle types across a larger spatial extent (Selden Jr. 2021b). Currently-employed Caddo phases and periods were defined using suites of co-present artefact types and attributes as a heuristic tool to explain the local cultural landscape, and the Historic Caddo network has expounded upon those efforts (Selden Jr. 2021a). The networks built upon the previously defined phases and periods, emphasising the dynamic and manifold relational connections that transcend predetermined categories (Selden Jr. 2021a). This was achieved through the use of a multi-scalar methodological approach (Knappett 2011; Mills et al. 2015), where the northern and southern communities were parsed into constituent groups using the same modularity statistic employed in defining the two (northern and southern) larger communities (Blondel et al. 2008; Lambiotte, Delvenne, and Barahona 2014). A number of the constituent groups identified by the networks were found to articulate with previously-identified Caddo polities, while others were not (Selden Jr. 2021a). knitr::include_graphics(&#39;./img/fig.net.png&#39;) (#fig:fig.net)Historic Caddo network generated using ceramic and lithic types, which includes Caddo ceramics, illustrating two larger north (blue) and south (red) communities of practice. The communities were identified using a modularity statistic to identify nodes more densely connected to one another than to the rest of the network (Blondel et al. 2008; Lambiotte, Delvenne, and Barahona 2014). A subsequent analysis of Gahagan bifaces confirmed that a second category of Caddo material culture expressed significant morphological differences across the same geography as the Hickory Engraved and Smithport Plain bottles (Selden Jr., Dockall, and Shafer 2018). The morphology of Gahagan bifaces from sites in central Texas was later found to differ significantly when compared with those recovered from the ancestral Caddo area (Selden Jr., Dockall, and Dubied 2020). That Gahagan bifaces were found to differ across two spatial boundaries was noteworthy, particularly since it is regularly assumed that they were manufactured in central Texas and arrived in the ancestral Caddo area as products of trade or exchange (Selden Jr., Dockall, and Shafer 2018; Selden Jr., Dockall, and Dubied 2020). Further, that Gahagan bifaces were found to differ across the same geographic area as the Hickory Engraved and Smithport Plain Caddo bottles suggested that the temporal range of the shape boundary may extend into the Formative/Early Caddo period (CE 800 - 1250); a notion that was later confirmed in a more comprehensive analysis of Caddo bottles (Selden Jr. 2021b). Perdiz arrow points represent a third category of Caddo material culture to be included in the analyses, and were among those artefact types included in the Historic Caddo network analysis (Selden Jr. 2021a). While it was expected that they would differ across the shape boundary, it was not at all clear how that difference would be characterised. This is due primarily to the high degree of shape variation that occurs across the Perdiz type. It was less clear whether Caddo Perdiz arrow points might be said to differ by temporal period in the northern and southern communities of practice (https://aksel-blaise.github.io/perdiz2/). A recent study found significant differences in shape by time, raw material, and burial context for Perdiz arrow points from the ancestral Caddo area (Selden Jr et al. 2021), making clear the dynamic nature of their morphology. This effort shifts the scope of these undertakings to focus upon a smaller scale, providing a means of applying the tools of geometric morphometrics to the oft-fragmentary and incomplete elements of material culture regularly encountered in the archaeological record. The first of these studies is focusing upon variability in decorative motifs via Caddo ceramic incisions (https://aksel-blaise.github.io/incision/), and a shift to analyses of standard vessel components would provide an additional means of developing and testing our conceptual arguments related to the Caddo cultural landscape. 0.1.2 Proof of concept Using the figures and tables provided in a recent article published in Southeastern Archaeology (Antoniuk 2021), rim images and tabular data were repurposed for a study of traditional and geometric morphometrics to assess whether ceramic rim shape differs between two discrete contexts at the Carson site. This document serves as proof of concept for a larger study related to ceramic rim morphology in the ancestral Caddo area of the American Southeast. 0.2 Primary findings Traditional morphometrics No variables differ significantly between contexts at the Carson site Geometric morphometrics Rim shape differs significantly between contexts at the Carson site 0.3 Data management The data and analysis code associated with this project can be accessed through this document or the GitHub repository https://github.com/aksel-blaise/carson.rim, which is digitally curated on the Open Science Framework DOI: 10.17605/OSF.IO/AE9ZM. 0.4 Colophon This version of the analysis was generated on 2021-05-26 06:08:46 using the following computational environment and dependencies: # what R packages and versions were used? if (&quot;devtools&quot; %in% installed.packages()) devtools::session_info() ## - Session info ------------------------------------------ ## setting value ## version R version 4.0.5 (2021-03-31) ## os Windows 10 x64 ## system x86_64, mingw32 ## ui RStudio ## language (EN) ## collate English_United States.1252 ## ctype English_United States.1252 ## tz America/Chicago ## date 2021-05-26 ## ## - Packages ---------------------------------------------- ## package * version date lib ## abind 1.4-5 2016-07-21 [1] ## ape 5.5 2021-04-25 [1] ## assertthat 0.2.1 2019-03-21 [1] ## backports 1.2.1 2020-12-09 [1] ## bezier 1.1.2 2018-12-14 [1] ## bookdown 0.22 2021-04-22 [1] ## brew 1.0-6 2011-04-13 [1] ## broom 0.7.6 2021-04-05 [1] ## bslib 0.2.5.1 2021-05-18 [1] ## cachem 1.0.5 2021-05-15 [1] ## callr 3.7.0 2021-04-20 [1] ## car 3.0-10 2020-09-29 [1] ## carData 3.0-4 2020-05-22 [1] ## cellranger 1.1.0 2016-07-27 [1] ## cli 2.5.0 2021-04-26 [1] ## cluster * 2.1.1 2021-02-14 [2] ## colorspace 2.0-1 2021-05-04 [1] ## cowplot 1.1.1 2020-12-30 [1] ## crayon 1.4.1 2021-02-08 [1] ## crosstalk 1.1.1 2021-01-12 [1] ## curl 4.3.1 2021-04-30 [1] ## data.table 1.14.0 2021-02-21 [1] ## DBI 1.1.1 2021-01-15 [1] ## dbplyr 2.1.1 2021-04-06 [1] ## desc 1.3.0 2021-03-05 [1] ## devtools 2.4.1 2021-05-05 [1] ## digest 0.6.27 2020-10-24 [1] ## dplyr * 1.0.6 2021-05-05 [1] ## ellipsis 0.3.2 2021-04-29 [1] ## evaluate 0.14 2019-05-28 [1] ## fansi 0.5.0 2021-05-25 [1] ## farver 2.1.0 2021-02-28 [1] ## fastmap 1.1.0 2021-01-25 [1] ## forcats * 0.5.1 2021-01-27 [1] ## foreign 0.8-81 2020-12-22 [2] ## fs 1.5.0 2020-07-31 [1] ## generics 0.1.0 2020-10-31 [1] ## geomorph * 4.0.0 2021-05-25 [1] ## ggExtra * 0.9 2019-08-27 [1] ## ggfortify * 0.4.11 2020-10-02 [1] ## ggplot2 * 3.3.3 2020-12-30 [1] ## ggpubr * 0.4.0 2020-06-27 [1] ## ggsignif 0.6.1 2021-02-23 [1] ## git2r 0.28.0 2021-01-10 [1] ## glue 1.4.2 2020-08-27 [1] ## gridExtra 2.3 2017-09-09 [1] ## gtable 0.3.0 2019-03-25 [1] ## haven 2.4.1 2021-04-23 [1] ## here * 1.0.1 2020-12-13 [1] ## highr 0.9 2021-04-16 [1] ## hms 1.1.0 2021-05-17 [1] ## htmltools 0.5.1.1 2021-01-22 [1] ## htmlwidgets 1.5.3 2020-12-10 [1] ## httpuv 1.6.1 2021-05-07 [1] ## httr 1.4.2 2020-07-20 [1] ## jpeg 0.1-8.1 2019-10-24 [1] ## jquerylib 0.1.4 2021-04-26 [1] ## jsonlite 1.7.2 2020-12-09 [1] ## knitr 1.33 2021-04-24 [1] ## labeling 0.4.2 2020-10-20 [1] ## later 1.2.0 2021-04-23 [1] ## lattice 0.20-41 2020-04-02 [2] ## lifecycle 1.0.0 2021-02-15 [1] ## lubridate 1.7.10 2021-02-26 [1] ## magrittr 2.0.1 2020-11-17 [1] ## manipulateWidget 0.10.1 2020-02-24 [1] ## MASS 7.3-54 2021-05-03 [1] ## Matrix * 1.3-3 2021-05-04 [1] ## memoise 2.0.0 2021-01-26 [1] ## mime 0.10 2021-02-13 [1] ## miniUI 0.1.1.1 2018-05-18 [1] ## modelr 0.1.8 2020-05-19 [1] ## munsell 0.5.0 2018-06-12 [1] ## nlme 3.1-152 2021-02-04 [2] ## openxlsx 4.2.3 2020-10-27 [1] ## pillar 1.6.1 2021-05-16 [1] ## pkgbuild 1.2.0 2020-12-15 [1] ## pkgconfig 2.0.3 2019-09-22 [1] ## pkgload 1.2.1 2021-04-06 [1] ## png 0.1-7 2013-12-03 [1] ## prettyunits 1.1.1 2020-01-24 [1] ## processx 3.5.2 2021-04-30 [1] ## promises 1.2.0.1 2021-02-11 [1] ## ps 1.6.0 2021-02-28 [1] ## purrr * 0.3.4 2020-04-17 [1] ## R6 2.5.0 2020-10-28 [1] ## Rcpp 1.0.6 2021-01-15 [1] ## readr * 1.4.0 2020-10-05 [1] ## readxl 1.3.1 2019-03-13 [1] ## remotes 2.3.0 2021-04-01 [1] ## reprex 2.0.0 2021-04-02 [1] ## rgl * 0.106.8 2021-04-23 [1] ## rio 0.5.26 2021-03-01 [1] ## rjson 0.2.20 2018-06-08 [1] ## rlang 0.4.11 2021-04-30 [1] ## rmarkdown 2.8 2021-05-07 [1] ## Rook 1.1-1 2014-10-20 [1] ## rprojroot 2.0.2 2020-11-15 [1] ## RRPP * 1.0.0 2021-03-30 [1] ## rstatix 0.7.0 2021-02-13 [1] ## rstudioapi 0.13 2020-11-12 [1] ## rvest 1.0.0 2021-03-09 [1] ## sass 0.4.0 2021-05-12 [1] ## scales 1.1.1 2020-05-11 [1] ## sessioninfo 1.1.1 2018-11-05 [1] ## shiny 1.6.0 2021-01-25 [1] ## StereoMorph * 1.6.3 2019-11-30 [1] ## stringi 1.6.2 2021-05-17 [1] ## stringr * 1.4.0 2019-02-10 [1] ## svgViewR 1.4.1 2020-10-03 [1] ## testthat 3.0.2 2021-02-14 [1] ## tibble * 3.1.2 2021-05-16 [1] ## tidyr * 1.1.3 2021-03-03 [1] ## tidyselect 1.1.1 2021-04-30 [1] ## tidyverse * 1.3.1 2021-04-15 [1] ## tiff 0.1-8 2021-03-31 [1] ## usethis 2.0.1 2021-02-10 [1] ## utf8 1.2.1 2021-03-12 [1] ## vctrs 0.3.8 2021-04-29 [1] ## webshot 0.5.2 2019-11-22 [1] ## wesanderson * 0.3.6 2018-04-20 [1] ## withr 2.4.2 2021-04-18 [1] ## xfun 0.23 2021-05-15 [1] ## xml2 1.3.2 2020-04-23 [1] ## xtable 1.8-4 2019-04-21 [1] ## yaml 2.2.1 2020-02-01 [1] ## zip 2.1.1 2020-08-27 [1] ## source ## CRAN (R 4.0.0) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.0) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.0) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.3) ## Github (geomorphR/geomorph@c7a1525) ## CRAN (R 4.0.2) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.2) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.0) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.0) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.2) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.2) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.0) ## CRAN (R 4.0.5) ## CRAN (R 4.0.5) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.3) ## CRAN (R 4.0.3) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.4) ## CRAN (R 4.0.4) ## CRAN (R 4.0.3) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.4) ## CRAN (R 4.0.5) ## CRAN (R 4.0.2) ## CRAN (R 4.0.2) ## CRAN (R 4.0.0) ## CRAN (R 4.0.2) ## ## [1] C:/Users/seldenjrz/Documents/R/win-library/4.0 ## [2] C:/Program Files/R/R-4.0.5/library Current Git commit details are: # where can I find this commit? if (&quot;git2r&quot; %in% installed.packages() &amp; git2r::in_repository(path = &quot;.&quot;)) git2r::repository(here::here()) ## Local: main D:/github/carson.rim ## Remote: main @ origin (https://github.com/aksel-blaise/carson.rim) ## Head: [0fa2f9e] 2021-05-26: &lt;edit index&gt; References "],["linear-morphometrics.html", "Chapter 1 Linear morphometrics 1.1 Read data and define variables 1.2 Boxplots for variable by context 1.3 Principal Components Analysis 1.4 Analyses of Variance (ANOVA) for variable ~ context", " Chapter 1 Linear morphometrics # install required analysis packages #devtools::install_github(&quot;tidyverse/tidyverse&quot;) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;kassambara/ggpubr&quot;) #devtools::install_github(&quot;sinhrks/ggfortify&quot;) #devtools::install_github(&quot;daattali/ggExtra&quot;) # load libraries library(here) library(tidyverse) library(RRPP) library(ggpubr) library(ggfortify) library(cluster) library(wesanderson) library(ggExtra) 1.1 Read data and define variables # read data data &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, as.is=TRUE) # define variables context &lt;- data$context surf.treat &lt;- data$surf.treat weight &lt;- data$weight lip.len &lt;- data$lip.length wall.th &lt;- data$wall.thick lip.th &lt;- data$lip.thick 1.2 Boxplots for variable by context Weight is included in the boxplots; however, since sherd weight includes more (sometimes much more) mass than the rim itself, that variable was omitted from the subsequent analysis. The degree to which wall thickness is applicable to this inquiry is debatable; however, it was included for the proof of concept. # boxplot of weight ~ context contextweight &lt;- ggplot(data, aes(x = context, y = weight, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Weight&#39;) # boxplot of lip length ~ context contextliplen &lt;- ggplot(data, aes(x = context, y = lip.len, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Lip Length&#39;) # boxplot of wall thickness ~ context contextwallth &lt;- ggplot(data, aes(x = context, y = wall.th, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Wall Thickness&#39;) # boxplot of lip thickness ~ context contextlipth &lt;- ggplot(data, aes(x = context, y = lip.th, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;,stackdir = &#39;center&#39;,dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Context&#39;, y = &#39;Lip Thickness&#39;) # render figure contextfigure &lt;- ggarrange(contextweight, contextliplen, contextwallth, contextlipth, labels = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;), ncol = 2, nrow = 2) ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. # plot figure contextfigure Figure 1.1: Boxplots for weight, lip length, wall thickness, and lip thickness for ceramic rims by context. 1.3 Principal Components Analysis #attributes for plot df&lt;-data[c(7:9)] pch.gps.gp &lt;- c(15,16)[as.factor(context)] col.gps.gp &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(context)] #pca pca &lt;- autoplot(prcomp(df), data = data, asp = 1, shape = pch.gps.gp, colour = &quot;context&quot;, variance_percentage = TRUE, loadings = TRUE, loadings.colour = &#39;blue&#39;, loadings.label = TRUE, loadings.label.size = 3, frame = TRUE, frame.type = &#39;t&#39;) + scale_fill_manual(values = wes_palette(&quot;Moonrise2&quot;)) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) ggMarginal(pca, groupColour = TRUE) Figure 1.2: Principal components analysis by context. 1.4 Analyses of Variance (ANOVA) for variable ~ context 1.4.1 Lip length ~ context # anova = lip length ~ context contextll &lt;- lm.rrpp(lip.len ~ context, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(contextll) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 1.211 1.2107 0.00776 0.219 -0.34935 0.6351 ## Residuals 28 154.777 5.5277 0.99224 ## Total 29 155.987 ## ## Call: lm.rrpp(f1 = lip.len ~ context, iter = 9999, SS.type = &quot;I&quot;, data = data, ## print.progress = FALSE) 1.4.2 Wall thickness ~ context # anova = wall thickness ~ context contextwth &lt;- lm.rrpp(wall.th ~ context, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(contextwth) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.575 0.57457 0.00865 0.2443 -0.30361 0.6198 ## Residuals 28 65.863 2.35223 0.99135 ## Total 29 66.437 ## ## Call: lm.rrpp(f1 = wall.th ~ context, iter = 9999, SS.type = &quot;I&quot;, data = data, ## print.progress = FALSE) 1.4.3 Lip thickness ~ context # anova = lip thickness ~ context contextlth &lt;- lm.rrpp(lip.th ~ context, SS.type = &quot;I&quot;, data = data, iter = 9999, print.progress = FALSE) anova(contextlth) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.39 0.3903 0.00204 0.0573 -0.93303 0.8098 ## Residuals 28 190.64 6.8086 0.99796 ## Total 29 191.03 ## ## Call: lm.rrpp(f1 = lip.th ~ context, iter = 9999, SS.type = &quot;I&quot;, data = data, ## print.progress = FALSE) "],["geometric-morphometrics.html", "Chapter 2 Geometric morphometrics 2.1 Load packages + data 2.2 Generalised Procrustes Analysis 2.3 Boxplot (centroid size) 2.4 Principal Components Analysis 2.5 Procrustes ANOVA: Shape and size 2.6 Allometry 2.7 Mean shapes", " Chapter 2 Geometric morphometrics 2.1 Load packages + data # download most recent software version #devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) #devtools::install_github(&quot;mlcollyer/RRPP&quot;) # load analysis packages library(here) library(StereoMorph) library(geomorph) library(ggplot2) library(dplyr) library(wesanderson) # read shape data and define number of sLMs shapes &lt;- readShapes(&quot;shapes&quot;) shapesGM &lt;- readland.shapes(shapes, nCurvePts = c(20)) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) 2.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalized Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.5 (R Core Development Team, 2017) using the geomorph library v. 4.0.0 (Adams et al. 2017; Adams and Otárola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). # gpa Y.gpa &lt;- gpagen(shapesGM, print.progress = FALSE) plot(Y.gpa) 2.3 Boxplot (centroid size) # dataframe gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, cont = qdata$ context) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # attributes csz &lt;- qdata$csz context &lt;- qdata$context # palette pal = wes_palette(&quot;Moonrise2&quot;) # boxplot of Perdiz arrow points by context csz.temp &lt;- ggplot(qdata, aes(x = context, y = csz, color = context)) + geom_boxplot() + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_color_manual(values = pal) + theme(legend.position = &quot;none&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x = &#39;Raw Material&#39;, y = &#39;Centroid Size&#39;) # render plot csz.temp ## `stat_bindot()` using `bins = 30`. Pick better value with `binwidth`. 2.4 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among the bifaces. The shape changes described by each principal axis are commonly visualized using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # pca pca &lt;- gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 30 ## Number of vectors 29 ## ## Importance of Components: ## Comp1 Comp2 Comp3 ## Eigenvalues 0.0371361 0.01634379 0.002105276 ## Proportion of Variance 0.6491699 0.28570315 0.036801982 ## Cumulative Proportion 0.6491699 0.93487306 0.971675045 ## Comp4 Comp5 ## Eigenvalues 0.0006150787 0.0004071649 ## Proportion of Variance 0.0107520889 0.0071175814 ## Cumulative Proportion 0.9824271341 0.9895447155 ## Comp6 Comp7 ## Eigenvalues 0.0002011171 0.0001378441 ## Proportion of Variance 0.0035156955 0.0024096305 ## Cumulative Proportion 0.9930604110 0.9954700415 ## Comp8 Comp9 ## Eigenvalues 9.249565e-05 6.610968e-05 ## Proportion of Variance 1.616901e-03 1.155652e-03 ## Cumulative Proportion 9.970869e-01 9.982426e-01 ## Comp10 Comp11 ## Eigenvalues 3.441467e-05 2.358206e-05 ## Proportion of Variance 6.015971e-04 4.122341e-04 ## Cumulative Proportion 9.988442e-01 9.992564e-01 ## Comp12 Comp13 ## Eigenvalues 1.273002e-05 8.279266e-06 ## Proportion of Variance 2.225314e-04 1.447285e-04 ## Cumulative Proportion 9.994790e-01 9.996237e-01 ## Comp14 Comp15 ## Eigenvalues 6.377831e-06 3.601826e-06 ## Proportion of Variance 1.114898e-04 6.296292e-05 ## Cumulative Proportion 9.997352e-01 9.997981e-01 ## Comp16 Comp17 ## Eigenvalues 3.218518e-06 2.218869e-06 ## Proportion of Variance 5.626238e-05 3.878768e-05 ## Cumulative Proportion 9.998544e-01 9.998932e-01 ## Comp18 Comp19 ## Eigenvalues 1.751957e-06 1.361077e-06 ## Proportion of Variance 3.062567e-05 2.379275e-05 ## Cumulative Proportion 9.999238e-01 9.999476e-01 ## Comp20 Comp21 ## Eigenvalues 8.823034e-07 7.436413e-07 ## Proportion of Variance 1.542340e-05 1.299947e-05 ## Cumulative Proportion 9.999630e-01 9.999760e-01 ## Comp22 Comp23 ## Eigenvalues 6.629143e-07 2.383783e-07 ## Proportion of Variance 1.158830e-05 4.167051e-06 ## Cumulative Proportion 9.999876e-01 9.999918e-01 ## Comp24 Comp25 ## Eigenvalues 1.985124e-07 1.381615e-07 ## Proportion of Variance 3.470163e-06 2.415178e-06 ## Cumulative Proportion 9.999953e-01 9.999977e-01 ## Comp26 Comp27 ## Eigenvalues 5.898989e-08 4.174008e-08 ## Proportion of Variance 1.031193e-06 7.296515e-07 ## Cumulative Proportion 9.999987e-01 9.999994e-01 ## Comp28 Comp29 ## Eigenvalues 2.855408e-08 3.955376e-09 ## Proportion of Variance 4.991491e-07 6.914327e-08 ## Cumulative Proportion 9.999999e-01 1.000000e+00 # set plot parameters pch.gps &lt;- c(15,17)[as.factor(qdata$context)] col.gps &lt;- pal[as.factor(qdata$context)] col.hull &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # pca plot pc.plot &lt;- plot(pca, asp = 1, pch = pch.gps, col = col.gps) shapeHulls(pc.plot, groups = qdata$context, group.cols = col.hull) 2.4.1 Minima/maxima of PC1/2 # plot x/y maxima/minima # x - minima mean.shape &lt;- mshape(Y.gpa$coords) plotRefToTarget(pca$shapes$shapes.comp1$min, mean.shape) # x - maxima plotRefToTarget(pca$shapes$shapes.comp1$max, mean.shape) # y - minima plotRefToTarget(pca$shapes$shapes.comp2$min, mean.shape) # y - maxima plotRefToTarget(pca$shapes$shapes.comp2$max, mean.shape) 2.5 Procrustes ANOVA: Shape and size # does shape differ by context? fit.sh.reg &lt;- procD.lm(shape ~ context, data = gdf, print.progress = FALSE, iter = 9999) # shape anova(fit.sh.reg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## context 1 0.17877 0.178767 0.10776 3.3816 1.7342 0.0365 ## Residuals 28 1.48019 0.052864 0.89224 ## Total 29 1.65896 ## ## context * ## Residuals ## Total ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ context, iter = 9999, data = gdf, print.progress = FALSE) # does size differ by context? fit.sz.reg &lt;- procD.lm(size ~ context, data = gdf, print.progress = FALSE, iter = 9999) # size anova(fit.sz.reg) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z ## context 1 0.0275 0.027532 0.00507 0.1426 -0.56399 ## Residuals 28 5.4054 0.193049 0.99493 ## Total 29 5.4329 ## Pr(&gt;F) ## context 0.7099 ## Residuals ## Total ## ## Call: procD.lm(f1 = size ~ context, iter = 9999, data = gdf, print.progress = FALSE) 2.6 Allometry # allometry (does shape change with size) fit.size &lt;- procD.lm(shape ~ size, data = gdf, print.progress = FALSE, iter = 9999) # allometry anova(fit.size) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## size 1 0.16431 0.16431 0.09905 3.0782 1.5966 0.0514 ## Residuals 28 1.49465 0.05338 0.90095 ## Total 29 1.65896 ## ## size . ## Residuals ## Total ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ size, iter = 9999, data = gdf, print.progress = FALSE) 2.7 Mean shapes # subset landmark coordinates to produce mean shapes new.coords &lt;- coords.subset(A = Y.gpa$coords, group = qdata$context) names(new.coords) ## [1] &quot;Pit 434&quot; &quot;Structure 23&quot; # group shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes plot(mean$`Pit 434`) plot(mean$`Structure 23`) # comparison plots plotRefToTarget(mean$`Pit 434`, mean$`Structure 23`, method = &quot;points&quot;, mag = 1) References "],["references.html", "References", " References "]]
